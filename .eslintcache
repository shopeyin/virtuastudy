[{"D:\\react tutorial\\virtuastudy\\src\\index.js":"1","D:\\react tutorial\\virtuastudy\\src\\App.js":"2","D:\\react tutorial\\virtuastudy\\src\\reportWebVitals.js":"3","D:\\react tutorial\\virtuastudy\\src\\firebase\\firebase.js":"4","D:\\react tutorial\\virtuastudy\\src\\redux\\user\\user-action.js":"5","D:\\react tutorial\\virtuastudy\\src\\redux\\user\\user-type.js":"6","D:\\react tutorial\\virtuastudy\\src\\redux\\store.js":"7","D:\\react tutorial\\virtuastudy\\src\\redux\\rootReducer.js":"8","D:\\react tutorial\\virtuastudy\\src\\redux\\user\\user-reducer.js":"9","D:\\react tutorial\\virtuastudy\\src\\components\\signin\\SignIn.jsx":"10","D:\\react tutorial\\virtuastudy\\src\\components\\profile\\Profile.jsx":"11","D:\\react tutorial\\virtuastudy\\src\\components\\creategroup\\CreateGroup.jsx":"12","D:\\react tutorial\\virtuastudy\\src\\components\\home\\HomePage.jsx":"13","D:\\react tutorial\\virtuastudy\\src\\components\\mygroup\\MyGroup.jsx":"14","D:\\react tutorial\\virtuastudy\\src\\components\\post\\CreatePost.jsx":"15"},{"size":719,"mtime":1611638183286,"results":"16","hashOfConfig":"17"},{"size":1637,"mtime":1611891842144,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2950,"mtime":1611972454638,"results":"20","hashOfConfig":"17"},{"size":156,"mtime":1611637102620,"results":"21","hashOfConfig":"17"},{"size":119,"mtime":1611637274508,"results":"22","hashOfConfig":"17"},{"size":267,"mtime":1611638251853,"results":"23","hashOfConfig":"17"},{"size":153,"mtime":1611637363744,"results":"24","hashOfConfig":"17"},{"size":383,"mtime":1611637221826,"results":"25","hashOfConfig":"17"},{"size":248,"mtime":1611688659006,"results":"26","hashOfConfig":"17"},{"size":818,"mtime":1611891647054,"results":"27","hashOfConfig":"17"},{"size":3760,"mtime":1611996739203,"results":"28","hashOfConfig":"17"},{"size":2883,"mtime":1611966639135,"results":"29","hashOfConfig":"17"},{"size":1132,"mtime":1611965111749,"results":"30","hashOfConfig":"17"},{"size":1231,"mtime":1611996918595,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"gq3oou",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react tutorial\\virtuastudy\\src\\index.js",[],["65","66"],"D:\\react tutorial\\virtuastudy\\src\\App.js",["67","68"],"D:\\react tutorial\\virtuastudy\\src\\reportWebVitals.js",[],"D:\\react tutorial\\virtuastudy\\src\\firebase\\firebase.js",[],"D:\\react tutorial\\virtuastudy\\src\\redux\\user\\user-action.js",[],"D:\\react tutorial\\virtuastudy\\src\\redux\\user\\user-type.js",[],"D:\\react tutorial\\virtuastudy\\src\\redux\\store.js",[],"D:\\react tutorial\\virtuastudy\\src\\redux\\rootReducer.js",[],"D:\\react tutorial\\virtuastudy\\src\\redux\\user\\user-reducer.js",[],"D:\\react tutorial\\virtuastudy\\src\\components\\signin\\SignIn.jsx",[],"D:\\react tutorial\\virtuastudy\\src\\components\\profile\\Profile.jsx",["69"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth, firestore } from \"../../firebase/firebase\";\r\n\r\nfunction Profile({ currentUser }) {\r\n  //   console.log(\r\n  //     firestore\r\n  //       .collection(\"users\")\r\n  //       .doc(\"N4F53uTvEpgUJOgAwtr1QD5RRz33\")\r\n  //       .collection(\"group\")\r\n  //       .doc(\"69UmXYVuydWxbJ2Pgl3x\")\r\n  //   );\r\n\r\n  return (\r\n    <div>\r\n      Profile {currentUser.displayName}\r\n      <button onClick={() => auth.signOut()}>SIGNOUT</button>\r\n      <Link to=\"/creategroup\">CREATE GROUP</Link>\r\n      <Link to=\"/mygroup\">MY GROUP</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","D:\\react tutorial\\virtuastudy\\src\\components\\creategroup\\CreateGroup.jsx",["70"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createGroup, firestore } from \"../../firebase/firebase\";\r\nimport CreatePost from \"../post/CreatePost\";\r\n\r\nfunction CreateGroup({ currentUser }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [group, setGroup] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n  const [submited, setSubmited] = useState(false);\r\n  const [isEmpty, setIsEmpty] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    setName({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await createGroup(currentUser, name.name).then((res) => {\r\n      setSubmited(true);\r\n    });\r\n  };\r\n\r\n  //   function isEmpty(obj) {\r\n  //     return Object.keys(obj).length === 0;\r\n  //   }\r\n\r\n  //   useEffect(() => {\r\n  //     // let db = await firestore\r\n  //     //   .collection(\"users\")\r\n  //     //   .doc(currentUser.id)\r\n  //     //   .collection(\"group\")\r\n  //     //   .doc(\"lPCV5WhG0uMjyN3Ywmjk\")\r\n  //     //   .onSnapshot(function (doc) {\r\n  //     //     console.log(doc.data());\r\n  //     //   });\r\n  //     // console.log(db);\r\n  //   }, []);\r\n  let id = currentUser ? currentUser.id : \"\";\r\n\r\n  const fetchMembers = async () => {\r\n    if (group) {\r\n      let membersList = [];\r\n      await firestore\r\n        .collection(\"groupy\")\r\n        .doc(group.id)\r\n        .collection(\"members\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.forEach(function (doc) {\r\n            let id = doc.id;\r\n            let data = doc.data();\r\n            membersList.push({ id: id, data: data });\r\n          });\r\n\r\n          setMembers(membersList);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (id) {\r\n        firestore\r\n          .collection(\"groupy\")\r\n          .where(\"adminId\", \"==\", id)\r\n\r\n          .get()\r\n          .then(function (snapshot) {\r\n            snapshot.forEach(function (doc) {\r\n              setGroup({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              });\r\n            });\r\n            setIsEmpty(false);\r\n          });\r\n        await fetchMembers();\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id, submited, isEmpty]);\r\n\r\n  // db.collection(\"cities\").get().then(function(querySnapshot) {\r\n  //     querySnapshot.forEach(function(doc) {\r\n  //         // doc.data() is never undefined for query doc snapshots\r\n  //         console.log(doc.id, \" => \", doc.data());\r\n  //     });\r\n  // });\r\n\r\n  console.log(\"members ooo\", members);\r\n  console.log(\"group\", group);\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputTitle\">Group Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            aria-describedby=\"TitleHelp\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Add group{\" \"}\r\n        </button>\r\n      </form>\r\n      <div>\r\n        <h3>Group Name</h3>\r\n        <div key={group.id}>{group.groupName}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>List of members</h3>\r\n        {members.map((member) => {\r\n          return (\r\n            <div key={member.id}>\r\n              {member.id} ------------ {member.data.memberName}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <CreatePost />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user.currentUser,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CreateGroup);\r\n","D:\\react tutorial\\virtuastudy\\src\\components\\home\\HomePage.jsx",["71"],"D:\\react tutorial\\virtuastudy\\src\\components\\mygroup\\MyGroup.jsx",["72"],"D:\\react tutorial\\virtuastudy\\src\\components\\post\\CreatePost.jsx",["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":17,"column":27,"nodeType":"85","endLine":29,"endColumn":7},{"ruleId":"79","severity":1,"message":"86","line":4,"column":16,"nodeType":"81","messageId":"82","endLine":4,"endColumn":25},{"ruleId":"83","severity":1,"message":"87","line":85,"column":6,"nodeType":"88","endLine":85,"endColumn":29,"suggestions":"89"},{"ruleId":"79","severity":1,"message":"90","line":5,"column":21,"nodeType":"81","messageId":"82","endLine":5,"endColumn":31},{"ruleId":"83","severity":1,"message":"91","line":28,"column":6,"nodeType":"88","endLine":28,"endColumn":10,"suggestions":"92"},{"ruleId":"79","severity":1,"message":"93","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"86","line":3,"column":21,"nodeType":"81","messageId":"82","endLine":3,"endColumn":30},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'unsubscribeFromAuth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'firestore' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMembers'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'fetchGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchGroup'. Either include it or remove the dependency array.",["97"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [id, submited, isEmpty, fetchMembers]",{"range":"102","text":"103"},"Update the dependencies array to be: [fetchGroup, id]",{"range":"104","text":"105"},[2289,2312],"[id, submited, isEmpty, fetchMembers]",[748,752],"[fetchGroup, id]"]